openapi: 3.0.3
info:
  title: Study-Savvy-Server - OpenAPI 3.0
  description: The API document for Study Savvy.
  termsOfService: https://study-savvy.com/api
  contact:
    email: open891013@gmail.com
  version: 1.0.0
externalDocs:
  description: See our UI
  url: https://www.figma.com/file/u15EBmHQSeixvpN67B71dm/%E7%95%A2%E5%B0%88?type=design&node-id=0%3A1&t=tFdC8pcy6VSyKkBX-1
  
servers:
  - url: https://study-savvy.com

tags:
- name: User
  description: Operations about users
- name: NLP_edit
  description: NLP operations to get new reply.
- name: Access_method
  description: About key to use Chat-GPT
- name: Mail
  description: To verification the email exist
- name: Files
  description: To get the result of files.
- name: AI_predict
  description: To upload file and use specific AI model.
- name: Oauth
  description: To login with oauth.
- name: Information
  description: To get and update personal information.
paths:
  /api/signup:
    post:
      tags:
        - User
      summary: Sign up to the website or app.
      description: To sign up an account in the db and return the JWT in httponly cookie.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                gender:
                  type: string
                  enum:
                    - "male"
                    - "female"
                    - "other"
                mail:
                  type: string
                  format: email
                password:
                  type: string
              example:
                name: "wei"
                gender: "male"
                mail: "wei891013@gmail.com"
                password: "wei_pwd"
      responses:
        '200':
          description: Successful operation
          headers:
            Set-Cookie:
              schema:
                type: string
                example: token=abc123; Path=/; HttpOnly
              description: The JWT, set as HttpOnly
        '400':
          description: Invalid status value
        '401':
          description: User have been signed up.

  /api/login/web:
    post:
      tags:
        - User
      summary: Login to the website.
      description: To login to an account in the db and return the JWT in httponly cookie.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mail:
                  type: string
                  format: email
                password:
                  type: string
              example:
                mail: "wei891013@gmail.com"
                password: "wei_pwd"
      responses:
        '200':
          description: Successful operation
          headers:
            Set-Cookie:
              schema:
                type: string
                example: token=abc123; Path=/; HttpOnly
              description: The JWT, set as HttpOnly
        '400':
          description: Invalid status value

  /api/login/app:
    post:
      tags:
        - User
      summary: Login to the app.
      description: To login to an account in the db and return the JWT.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mail:
                  type: string
                  format: email
                password:
                  type: string
              example:
                mail: "wei891013@gmail.com"
                password: "wei_pwd"

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: Invalid status value

  /api/logout:
    delete:
      tags:
        - User
      security:
        - BearerAuth: []
      summary: To log out in the website or app.
      description: Logout account and remove the JWT token in redis.
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          required: false
          schema:
            type: string
          description: CSRF token
      responses:
        '201':
          description: Successful operation
        '400':
          description: Invalid status value
        '401':
          description: Not authorize.
        '422':
          description: JWT is invalid.

  /api/oauth/web/google:
    get:
      tags:
        - Oauth
      summary: Login to the website.
      description: To login to an account in the db and return the JWT in httponly cookie.
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid status value

  /api/oauth/app/google:
    get:
      tags:
        - Oauth
      summary: Login to the app with google.
      security:
        - BearerAuth: [ ]
      description: To login to an account with google and in app.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: Invalid status value

  /api/oauth/authorize/google/:
    get:
      tags:
        - Oauth
      summary: Login to the website.
      description: To login to an account in the db and return the JWT in httponly cookie.
      responses:
        '200':
          description: Successful operation
          headers:
            Set-Cookie:
              schema:
                type: string
                example: token=abc123; Path=/; HttpOnly
              description: The JWT, set as HttpOnly
        '400':
          description: Invalid status value

  /api/information:
    get:
      tags:
        - Information
      security:
        - BearerAuth: [ ]
      summary: Return personal information
      description: Return personal information
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  mail:
                    type: string
                  gender:
                    type: string
                    enum:
                      - "male"
                      - "female"
                      - "other"
        '400':
          description: Invalid status value
        '401':
          description: Not authorize.
        '422':
          description: JWT is invalid.
        '404':
          description: Not found.
    put:
      tags:
        - Information
      security:
        - BearerAuth: [ ]
      summary: Update personal information
      description: Update personal information
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          required: false
          schema:
            type: string
          description: CSRF token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: the user's name.
                gender:
                  type: string
                  enum:
                    - "male"
                    - "female"
                    - "other"
              example:
                name: "wei"
                gender: "male"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  mail:
                    type: string
                  gender:
                    type: string
                    enum:
                      - "male"
                      - "female"
                      - "other"
        '400':
          description: Invalid status value
        '401':
          description: Not authorize.
        '422':
          description: JWT is invalid.
        '404':
          description: Not found.

  /api/information/password_edit:
    put:
      tags:
        - Information
      security:
        - BearerAuth: [ ]
      summary: Return personal information
      description: Return personal information
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          required: false
          schema:
            type: string
          description: CSRF token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                original_pwd:
                  type: string
                new_pwd:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  mail:
                    type: string
                  gender:
                    type: string
                    enum:
                      - "male"
                      - "female"
                      - "other"
        '400':
          description: Invalid status value
        '401':
          description: Not authorize.
        '422':
          description: JWT is invalid.
        '404':
          description: Not found.

  /api/files:
    get:
      tags:
        - Files
      security:
        - BearerAuth: []
      summary: Return a file's information
      description: File's information can be provided, according to file_id
      parameters:
        - name: page
          in: query
          description: The page number to retrieve.
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_pages:
                    type: integer
                    description: The total number of pages.
                  current_page:
                    type: integer
                    description: The current page number.
                  datas:
                    type: array
                    items:
                      type: object
                      properties:
                        file_time:
                          type: string
                          description: The file time build.
                        file_id:
                          type: string
                          description:  The file ID.
                        status:
                          type: string
                          description: The file's current status.
                        file_type:
                          type: string
                          description: The file type.

        '400':
          description: Invalid status value
        '401':
          description: Not authorize.
        '422':
          description: JWT is invalid.

  /api/files/ASR:
    get:
      tags:
        - Files
      security:
        - BearerAuth: []
      summary: Return a ASR file's information.
      description: The ASR file's information can be provided, according to file_id.
      parameters:
        - name: page
          in: query
          description: The page number to retrieve.
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_pages:
                    type: integer
                    description: The total number of pages.
                  current_page:
                    type: integer
                    description: The current page number.
                  datas:
                    type: array
                    items:
                      type: object
                      properties:
                        file_time:
                          type: string
                          description: The file time build.
                        file_id:
                          type: string
                          description: The file ID.
                        status:
                          type: string
                          description: The file's current status.
                        file_type:
                          type: string
                          description:  The file type.
        '400':
          description: Invalid status value
        '401':
          description: Not authorize.
        '422':
          description: JWT is invalid.

  /api/files/OCR:
    get:
      tags:
        - Files
      security:
        - BearerAuth: []
      summary: Return a OCR file's information.
      description: The OCR file's information can be provided, according to file_id.
      parameters:
        - name: page
          in: query
          description: The page number to retrieve.
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_pages:
                    type: integer
                    description: The total number of pages.
                  current_page:
                    type: integer
                    description: The current page number.
                  datas:
                    type: array
                    items:
                      type: object
                      properties:
                        file_time:
                          type: string
                          description: The file time build.
                        file_id:
                          type: string
                          description: The file ID.
                        status:
                          type: string
                          description: The file's current status.
                        file_type:
                          type: string
                          description: The file type.
        '400':
          description: Invalid status value
        '401':
          description: Not authorize.
        '422':
          description: JWT is invalid.

  /api/files/{file_id}:
    get:
      tags:
        - Files
      security:
        - BearerAuth: []
      summary: Return a file's information.
      description: The file's information can be provided, according to file_id.
      parameters:
        - name: file_id
          in: path
          description: file_id that need to be considered for filter
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  prompt:
                    type: string
                    description: The prompt for OCR.
                  content:
                    type: string
                    description: The file content.
                  summarize:
                    type: string
                    description: The article's summary.
                  details:
                    type: array
                    items:
                      type: string
                      description: The messages for OCR file.
        '400':
          description: Invalid status value
        '401':
          description: Not authorize.
        '403':
          description: Forbidden.
        '404':
          description: Not exist.
        '422':
          description: JWT is invalid.
    delete:
      tags:
        - Files
      security:
        - BearerAuth: [ ]
      summary: Delete a file.
      description: The file's information can be deleted, according to file_id.
      parameters:
        - name: file_id
          in: path
          description: file_id that need to be considered for filter
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Successful operation
        '400':
          description: Invalid status value
        '401':
          description: Not authorize.
        '403':
          description: Forbidden.
        '404':
          description: Not exist.
        '422':
          description: JWT is invalid.

  /api/files/resources/audio/{file_id}:
    get:
      tags:
        - Files
      security:
        - BearerAuth: [ ]
      summary: Return audio.
      description: Return audio.
      parameters:
        - name: file_id
          in: path
          description: file_id that need to be considered for filter
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            audio/mpeg:
              schema:
                type: string
                format: binary
        '400':
          description: Invalid status value
        '401':
          description: Not authorize.
        '403':
          description: Forbidden.
        '404':
          description: Not exist.
        '422':
          description: JWT is invalid.

  /api/files/resources/graph/{file_id}:
    get:
      tags:
        - Files
      security:
        - BearerAuth: [ ]
      summary: Return image.
      description: Return image.
      parameters:
        - name: file_id
          in: path
          description: file_id that need to be considered for filter
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
        '400':
          description: Invalid status value
        '401':
          description: Not authorize.
        '403':
          description: Forbidden.
        '404':
          description: Not exist.
        '422':
          description: JWT is invalid.

  /api/NLP_edit/ASR/{file_id}:
    put:
      tags:
        - NLP_edit
      security:
        - BearerAuth: []
      summary: Use chat-gpt to summarize the content.
      description: Use chat-gpt to summarize the content.
      parameters:
        - name: file_id
          in: path
          required: true
          description: The ID of the ASR file.
          schema:
            type: string
        - in: header
          name: X-CSRF-TOKEN
          required: false
          schema:
            type: string
          description: CSRF token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                prompt:
                  type: string
                  description: The prompt give to the chat-gpt.
                content:
                  type: string
                  description: the content of ASR.
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid request
        '401':
          description: Not authorize.
        '403':
          description: Forbidden.
        '404':
          description: Not exist.
        '422':
          description: JWT is invalid.

  /api/NLP_edit/OCR/{file_id}:
    put:
      tags:
        - NLP_edit
      security:
        - BearerAuth: []
      summary: Use chat-gpt to judge and give suggestion to the essay.
      description: Use chat-gpt to judge and give suggestion to the essay.
      parameters:
        - name: file_id
          in: path
          required: true
          description: The ID of the OCR file.
          schema:
            type: string
        - in: header
          name: X-CSRF-TOKEN
          required: false
          schema:
            type: string
          description: CSRF token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                prompt:
                  type: string
                  description: The prompt give to the chat-gpt.
                content:
                  type: string
                  description: The content of essay.
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid request
        '401':
          description: Not authorize.
        '403':
          description: Forbidden.
        '404':
          description: Not exist.
        '422':
          description: JWT is invalid.

  /api/Access_method/access_token:
    put:
      tags:
        - Access_method
      security:
        - BearerAuth: []
      summary: Get Access Token.
      description: Get Access token.
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          required: false
          schema:
            type: string
          description: CSRF token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_token:
                  type: string
                  description: The access token to be verified.
                AES_key:
                  type: string
                  format: binary
                  minLength: 256
                  maxLength: 256
      responses:
        '200':
          description: Successful verification
        '400':
          description: Invalid access token
        '401':
          description: Not authorize.
        '422':
          description: JWT is invalid.

  /api/Access_method/api_key:
    put:
      tags:
        - Access_method
      security:
        - BearerAuth: [ ]
      summary: Get api key.
      description: Get api key.
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          required: false
          schema:
            type: string
          description: CSRF token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                api_key:
                  type: string
                  description: The access token to be verified.
                AES_key:
                  type: string
                  format: binary
                  minLength: 256
                  maxLength: 256
      responses:
        '200':
          description: Successful verification
        '400':
          description: Invalid access token
        '401':
          description: Not authorize.
        '422':
          description: JWT is invalid.

  /api/verification:
    post:
      tags:
        - Mail
      summary: Send the verification code to the email.
      description: Send the verification code to the email.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mail:
                  type: string
                  format: email
                  description: The email to sent.
              example:
                mail: "open891013@gmail.com"
      responses:
        '200':
          description: Successful verification
        '400':
          description: Invalid access token

  /api/verification/{mail}/{code}:
    get:
      tags:
        - Mail
      summary: Verify the email.
      description: Verify the email.
      parameters:
        - name: mail
          in: path
          description: The email to verify
          required: true
          schema:
            type: string
            format: email
        - name: code
          in: path
          description: The verification code
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful verification
        '400':
          description: Invalid access token
        '404':
          description: Not exist.

  /api/predict/ASR:
    post:
      tags:
        - AI_predict
      security:
        - BearerAuth: [ ]
      summary: Upload ASR file to application.
      description: To upload the needed details of ASR file.
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          required: false
          schema:
            type: string
          description: CSRF token
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                prompt:
                  type: string
                  description: Tell AI what is important.
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Successful operation
        '400':
          description: Fail to update ASR file.
        '401':
          description: Not authorize.
        '422':
          description: JWT is invalid.

  /api/predict/OCR:
    post:
      tags:
        - AI_predict
      security:
        - BearerAuth: [ ]
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          required: false
          schema:
            type: string
          description: CSRF token
      summary: Upload OCR file to application.
      description: To upload the needed details of OCR file.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                prompt:
                  type: string
                  description: Tell AI the question.
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Successful operation
        '400':
          description: Fail to update OCR file.
        '401':
          description: Not authorize.
        '422':
          description: JWT is invalid.

  /api/predict/OCR_Text:
    post:
      tags:
        - AI_predict
      security:
        - BearerAuth: [ ]
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          required: false
          schema:
            type: string
          description: CSRF token
      summary: Upload OCR file to application.
      description: To upload the needed details of OCR file.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                prompt:
                  type: string
                content:
                  type: string
      responses:
        '200':
          description: Successful operation
        '400':
          description: Fail to update OCR file.
        '401':
          description: Not authorize.
        '422':
          description: JWT is invalid.

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  